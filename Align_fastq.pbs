#!/bin/bash
### Usage: qsub -N Job_Name -v FASTQ1=/path/to/read1.fastq,FASTQ2=/path/to/read2.fastq,PREFIX=Output_Prefix_ID_Number /path/to/Align_fastq.pbs
### Output files
#PBS -e _Align_${PREFIX}.err
#PBS -o _Align_${PREFIX}.out
#PBS -l nodes=1:bigmem:ppn=12,vmem=100gb
#PBS -m ae

PROGRAM=${BASH_SOURCE[0]}
echo "[$(date +'%Y-%m-%d %H:%M:%S %Z')] BEGIN: $PROGRAM"
echo "Call: ${BASH_SOURCE[*]}"
echo "Script: $PROGRAM"
echo "Arguments: $*"

### Configuration
LG3_HOME=${LG3_HOME:-/home/jocostello/shared/LG3_Pipeline}
LG3_OUTPUT_ROOT=${LG3_OUTPUT_ROOT:-/costellolab/data1/jocostello}
PROJECT=${PROJECT:-LG3}
EMAIL=${EMAIL:?}
SCRATCHDIR=${SCRATCHDIR:-/scratch/${USER:?}/${PBS_JOBID}}
LG3_DEBUG=${LG3_DEBUG:-true}

### Debug
if [[ $LG3_DEBUG ]]; then
  echo "Settings:"
  echo "- LG3_HOME=$LG3_HOME"
  echo "- LG3_OUTPUT_ROOT=$LG3_OUTPUT_ROOT"
  echo "- PROJECT=${PROJECT}"
  echo "- EMAIL=${EMAIL}"
  echo "- SCRATCHDIR=$SCRATCHDIR"
  echo "- PWD=$PWD"
  echo "- USER=$USER"
  echo "- PBS_NUM_PPN=$PBS_NUM_PPN"
fi

### Input
echo "Input:"
echo "- FASTQ1=${FASTQ1:?}"
echo "- FASTQ2=${FASTQ2:?}"
echo "- PREFIX=${PREFIX:?}"
echo "- PROJECT=${PROJECT:?}"
echo "- LG3_CHASTITY_FILTERING=${LG3_CHASTITY_FILTERING}"

## Assert existance of input files
[[ -f "$FASTQ1" ]] || { echo "File not found: ${FASTQ1}"; exit 1; }
[[ -f "$FASTQ2" ]] || { echo "File not found: ${FASTQ2}"; exit 1; }

FASTQ1=$(readlink -e "${FASTQ1:?}") ## Absolute path
FASTQ2=$(readlink -e "${FASTQ2:?}") ## Absolute path

OPWD=${PWD:?}
DATE=$(date '+%Y-%m-%d %H:%M:%S')
NODES=$(tr '\n' ' ' < "$PBS_NODEFILE")
echo "Started $PROG on $DATE as $USER"
echo "Using node(s): $NODES"

## Assert existance of software
SCRIPT=${LG3_HOME}/scripts/Align_fastq.sh
[[ -x "$SCRIPT" ]] || { echo "File not found or not an executable: ${SCRIPT}"; exit 1; }

DEST="${LG3_OUTPUT_ROOT}/${PROJECT}/exomes"
mkdir -p "${DEST}" || { echo "Can't create destination directory ${DEST}"; exit 1; }

WDIR=${SCRATCHDIR}/${PREFIX}
mkdir -p "${WDIR}" || { echo "Can't create scratch directory ${WDIR}"; exit 1; }
cd "${WDIR}" || { echo "ERROR: Failed to set working directory to ${WDIR}"; exit 1; }
echo "Current working directory: ${PWD}"

cp "$FASTQ1" "$FASTQ2" .

echo "Content of ${PWD}:"
ls -lrt

FQ1=$(basename "$FASTQ1")
FQ2=$(basename "$FASTQ2")

"${SCRIPT}" "$FQ1" "$FQ2" "$PREFIX" || { echo "ERROR: ${SCRIPT} FAILED"; exit 1; }

echo "Content of ${PWD}:"
ls -lrt

rm "$FQ1" "$FQ2"

echo "Content of ${PWD}:"
ls -lrt

cd "${OPWD}" || { echo "ERROR: Failed to set working directory to .."; exit 1; }
echo "Current working directory: ${PWD}"

echo "Content of ${WDIR}:"
ls -lrt "${WDIR}"

cp -r -p "${WDIR}" "${DEST}/"

echo "Content of ${DEST}:"
ls -lrt "${DEST}"

rm -rf "${WDIR:?}"

echo "End of script!"
date

echo "[$(date +'%Y-%m-%d %H:%M:%S %Z')] END: $PROGRAM"
