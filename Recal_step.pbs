#!/bin/bash
### Usage: qsub -N Job_Name -v BAMS=/path/to/file1.bam:/path/to/file2.bam:...,NORMAL=AXXXXXX,PATIENT=PatientXX,ILIST=/path/to/exome_kit.interval_list /path/to/Recal.pbs
#PBS -e _Rec${START}_${PATIENT}.err
#PBS -o _Rec${START}_${PATIENT}.out
#PBS -l nodes=1:ppn=12,vmem=200gb
#PBS -m ae

PROGRAM=${BASH_SOURCE[0]}
echo "[$(date +'%Y-%m-%d %H:%M:%S %Z')] BEGIN: $PROGRAM"
echo "Call: ${BASH_SOURCE[*]}"
echo "Script: $PROGRAM"
echo "Arguments: $*"

### Configuration
LG3_HOME=${LG3_HOME:?}
LG3_OUTPUT_ROOT=${LG3_OUTPUT_ROOT:-output}
EMAIL=${EMAIL:?}
PROJECT=${PROJECT:-LG3}
LG3_SCRATCH_ROOT=${LG3_SCRATCH_ROOT:-/scratch/${USER:?}/${PBS_JOBID}}
LG3_DEBUG=${LG3_DEBUG:-true}
START=${START:?}
RECOVER_DIR=${RECOVER_DIR:?}

### Debug
if [[ $LG3_DEBUG ]]; then
  echo "Settings:"
  echo "- LG3_HOME=$LG3_HOME"
  echo "- LG3_OUTPUT_ROOT=$LG3_OUTPUT_ROOT"
  echo "- EMAIL=${EMAIL}"
  echo "- LG3_SCRATCH_ROOT=$LG3_SCRATCH_ROOT"
  echo "- PWD=$PWD"
  echo "- USER=$USER"
  echo "- PBS_NUM_PPN=$PBS_NUM_PPN"
  echo "- hostname=$(hostname)"
fi


### Input
echo "Input:"
echo "- PROJECT=${PROJECT:?}"
echo "- BAMS=${BAMS:?}"
echo "- PATIENT=${PATIENT:?}"
echo "- NORMAL=${NORMAL:?}"
echo "- ILIST=${ILIST:?}"
echo "- START=${START:?}"
echo "- RECOVER_DIR=${RECOVER_DIR:?}"

[[ "${PATIENT}" == *[_]* ]] && { echo "ERROR: 'PATIENT' must not contain underscores: ${PATIENT}"; exit 1; }

## Assert existance of input files
[[ -f "$ILIST" ]] || { echo "ERROR: File not found: ${ILIST}"; exit 1; }
ILIST=$(readlink -e "${ILIST:?}") ## Absolute path

module load CBC r/3.4.2

echo -n "Checking R: "
Rscript --version || { echo "ERROR: No Rscript is available!"; exit 1; }

DATE=$(date '+%Y-%m-%d %H:%M:%S')
NODES=$(tr '\n' ' ' < "$PBS_NODEFILE")
echo "Started $PROG on $DATE"
echo "Using node(s): $NODES"

## Assert existance of software
SCRIPT_A=${LG3_HOME}/scripts/Recal_step.sh
[[ -x "$SCRIPT_A" ]] || { echo "ERROR: File not found or not an executable: ${SCRIPT_A}"; exit 1; }

SCRIPT_B=${LG3_HOME}/scripts/Germline.sh
[[ -x "$SCRIPT_B" ]] || { echo "ERROR: File not found or not an executable: ${SCRIPT_B}"; exit 1; }

DESTDIR=${LG3_OUTPUT_ROOT}/${PROJECT}/exomes_recal/${PATIENT}
mkdir -p "${DESTDIR}" || { echo "ERROR: Can't create destination directory ${DESTDIR}"; exit 1; }

DESTDIR2=${LG3_OUTPUT_ROOT}/${PROJECT}/exomes_recal/${PATIENT}/germline
mkdir -p "${DESTDIR2}" || { echo "ERROR: Can't create destination directory ${DESTDIR2}"; exit 1; }

WDIR=${LG3_SCRATCH_ROOT}/${PATIENT}
mkdir -p "${WDIR}" || { echo "ERROR: Can't create destination directory ${WDIR}"; exit 1; }
cd "${WDIR}" || { echo "ERROR: Failed to set working directory to ${WDIR}"; exit 1; }

echo "Copying recovered data from ${RECOVER_DIR} ..."
cp -p "${RECOVER_DIR}/"* . || { echo "ERROR cp!" ; exit 1 ; }

"${SCRIPT_A}" "$BAMS" "$PATIENT" "$ILIST" "$START" "$RECOVER_DIR" || { echo "ERROR: ${SCRIPT_A} failed"; exit 1; }

cd "${LG3_SCRATCH_ROOT}" || { echo "ERROR: Failed to set working directory to ${LG3_SCRATCH_ROOT}"; exit 1; }

cp -p "${LG3_SCRATCH_ROOT}/${PATIENT}"/* "${DESTDIR}" || { echo "ERROR: cp 1!" ; exit 1 ; }

echo "Starting germline analysis ..."
mkdir -p germline
cd germline || { echo "ERROR: Failed to set working directory to germline"; exit 1; }

{ time "${SCRIPT_B}" \
      "../${NORMAL}.bwa.realigned.rmDups.recal.bam" \
      "${PATIENT}" "$ILIST"; } 2>&1 || { echo "ERROR: ${SCRIPT_B} failed"; exit 1; }

cp -p "${LG3_SCRATCH_ROOT}/${PATIENT}"/germline/* "${DESTDIR2}" || { echo "ERROR: cp 2" ; exit 1 ; }

echo "Cleaning ${LG3_SCRATCH_ROOT} ..."
rm -rf "${LG3_SCRATCH_ROOT}"

echo -n "End of script! "
echo "[$(date +'%Y-%m-%d %H:%M:%S %Z')] END: $PROGRAM"
