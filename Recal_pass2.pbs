#!/bin/bash
##### Version of the pipeline without Base Qual. Recal! (for BAMS already recaled!)

### Usage: qsub -N Job_Name -v BAMS=/path/to/file1.bam:/path/to/file2.bam:...,NORMAL=AXXXXXX,PATIENT=PatientXX,ILIST=/path/to/exome_kit.interval_list /path/to/Recal_pass2.pbs
### Output files
#PBS -e _Recal2_${PATIENT}.err
#PBS -o _Recal2_${PATIENT}.out
#PBS -l nodes=1:ppn=12,vmem=200gb
#PBS -m ae

# shellcheck source=scripts/utils.sh
source "${LG3_HOME}/scripts/utils.sh"

### Configuration
LG3_HOME=${LG3_HOME:?}
LG3_OUTPUT_ROOT=${LG3_OUTPUT_ROOT:-output}
EMAIL=${EMAIL:?}
PROJECT=${PROJECT:-LG3}
LG3_SCRATCH_ROOT=${LG3_SCRATCH_ROOT:-/scratch/${USER:?}/${PBS_JOBID}}
LG3_DEBUG=${LG3_DEBUG:-true}

### Debug
if [[ $LG3_DEBUG ]]; then
  echo "LG3_HOME=$LG3_HOME"
  echo "LG3_OUTPUT_ROOT=$LG3_OUTPUT_ROOT"
  echo "PROJECT=${PROJECT}"
  echo "EMAIL=${EMAIL}"
  echo "LG3_SCRATCH_ROOT=$LG3_SCRATCH_ROOT"
  echo "PWD=$PWD"
  echo "USER=$USER"
fi

### Input
echo "Input:"
echo "- PROJECT=${PROJECT:?}"
echo "- BAMS=${BAMS:?}"
echo "- PATIENT=${PATIENT:?}"
echo "- NORMAL=${NORMAL:?}"
echo "- ILIST=${ILIST:?}"

## Assert existance of input files
assert_file_exists "${ILIST}"
ILIST=$(readlink -e "${ILIST:?}") ## Absolute path

module load CBC r/3.4.4
echo -n "Checking R: "
Rscript --version || error "Rscript executable is not available"

DATE=$(date '+%Y-%m-%d %H:%M:%S')
NODES=$(tr '\n' ' ' < "$PBS_NODEFILE")
echo "Started $PROG on $DATE"
echo "Using node(s): $NODES"

## Assert existance of software
SH_RECAL_PASS2=${LG3_HOME}/scripts/Recal_pass2.sh
SH_GERMLINE=${LG3_HOME}/scripts/Germline.sh
assert_file_executable "${SH_RECAL_PASS2}"
assert_file_executable "${SH_GERMLINE}"

DESTDIR=${LG3_OUTPUT_ROOT}/${PROJECT}/exomes_recal/${PATIENT}
make_dir "${DESTDIR}"

DESTDIR2=${LG3_OUTPUT_ROOT}/${PROJECT}/exomes_recal/${PATIENT}/germline
make_dir "${DESTDIR2}" 

WDIR=${LG3_SCRATCH_ROOT}/${PATIENT}
make_dir "${WDIR}"
change_dir "${WDIR}"

"${SH_RECAL_PASS2}" "$BAMS" "$PATIENT" "$ILIST" || error "${SH_RECAL_PASS2} failed!"
echo "${SH_RECAL_PASS2} done!"

echo "Making symlinks ..."
mk_links() {
  while read -r F
  do
    F=$(basename "$F")
    L=${F/rmDups/rmDups.recal}
    echo "ln -sf $F $L"
    ln -sf "$F" "$L" || error "Link $F --> $L failed"
  done
}
find . -maxdepth 1 -type f -name "*.bwa.realigned.rmDups.*" -not -name "*recal*" | mk_links

change_dir "${LG3_SCRATCH_ROOT}"

echo "Copy files to ${DESTDIR}..."
cp -a "${LG3_SCRATCH_ROOT}/${PATIENT}"/* "${DESTDIR}" || error "cp from scratch failed"

echo "Starting germline analysis ..."
WDIR2=${LG3_SCRATCH_ROOT}/${PATIENT}/germline
make_dir "${WDIR2}"
change_dir "${WDIR2}"

[[ -f "../${NORMAL}.bwa.realigned.rmDups.recal.bam" ]] || error "File not found: ../${NORMAL}.bwa.realigned.rmDups.recal.bam"

{ time "${SH_GERMLINE}" \
      "../${NORMAL}.bwa.realigned.rmDups.bam" \
      "${PATIENT}" "$ILIST"; } 2>&1 || error "${SH_GERMLINE} failed"

cp -a "${LG3_SCRATCH_ROOT}/${PATIENT}"/germline/* "${DESTDIR2}" || error "cp 2"

echo "Cleaning: rm ${LG3_SCRATCH_ROOT} ..."
rm -rf "${LG3_SCRATCH_ROOT}"

echo "[$(date +'%Y-%m-%d %H:%M:%S %Z')] END: $PROGRAM"
