#!/bin/bash
### Usage: qsub -v SAMPLE=PatientXX,PROJECT=LG3orGBM,CONV=patient_ID_conversions.txt /path/to/pindel_all.pbs
#PBS -N ${SAMPLE}.pindel
#PBS -e ${SAMPLE}.pindel.err
#PBS -o ${SAMPLE}.pindel.out
#PBS -l nodes=1:ppn=6,vmem=12gb
#PBS -m ae

PROGRAM=${BASH_SOURCE[0]}
echo "[$(date +'%Y-%m-%d %H:%M:%S %Z')] BEGIN: $PROGRAM"
echo "Call: ${BASH_SOURCE[*]}"
echo "Script: $PROGRAM"
echo "Arguments: $*"

### Configuration
LG3_HOME=${LG3_HOME:-/home/jocostello/shared/LG3_Pipeline}
LG3_OUTPUT_ROOT=${LG3_OUTPUT_ROOT:-/costellolab/data1/jocostello}
LG3_INPUT_ROOT=${LG3_INPUT_ROOT:-${LG3_OUTPUT_ROOT}}
EMAIL=${EMAIL:?}
PROJECT=${PROJECT:-LG3}
SCRATCH_ROOT=${SCRATCH_ROOT:-/scratch/${USER:?}/${PBS_JOBID}}
LG3_DEBUG=${LG3_DEBUG:-true}
ncores=${PBS_NUM_PPN:-1}

### Debug
if [[ $LG3_DEBUG ]]; then
  echo "Settings:"
  echo "- LG3_HOME=$LG3_HOME"
  echo "- LG3_INPUT_ROOT=$LG3_INPUT_ROOT"
  echo "- LG3_OUTPUT_ROOT=$LG3_OUTPUT_ROOT"
  echo "- EMAIL=${EMAIL}"
  echo "- SCRATCH_ROOT=$SCRATCH_ROOT"
  echo "- PWD=$PWD"
  echo "- USER=$USER"
  echo "- PBS_NUM_PPN=$PBS_NUM_PPN"
  echo "- ncores=$ncores"
fi

[[ -d "$LG3_INPUT_ROOT" ]]    || { echo "Folder not found: ${LG3_INPUT_ROOT}"; exit 1; }
[[ -d "$LG3_OUTPUT_ROOT" ]]    || { echo "Folder not found: ${LG3_OUTPUT_ROOT}"; exit 1; }
LG3_INPUT_ROOT=$(readlink -e "${LG3_INPUT_ROOT}") ## Absolute path
LG3_OUTPUT_ROOT=$(readlink -e "${LG3_OUTPUT_ROOT}") ## Absolute path

### Input
echo "Input:"
echo "- SAMPLE=${SAMPLE}"
echo "- PROJECT=${PROJECT}"
echo "- CONV=${CONV}"

CONV=$(readlink -e "${CONV:?}") ## Absolute path

### Include in .bashrc!!!
#module load CBC cbc-shared

echo "PINDEL"
echo "Patient: ${SAMPLE}"
echo "Project: ${PROJECT}"
echo "Conversion File: ${CONV}"
echo "----------------------------------"

PINDEL=${LG3_HOME}/tools/pindel024t/pindel
PINDEL2VCF=${LG3_HOME}/tools/pindel024t/pindel2vcf
SCRIPT_A=${LG3_HOME}/scripts/pindel_setup.sh
SCRIPT_B=${LG3_HOME}/scripts/pindel_filter.sh
SCRIPT_C=${LG3_HOME}/scripts/pindel_annotate.sh
PYTHON_SCRIPT_A=${LG3_HOME}/scripts/vcf2tdt.py
unset PYTHONPATH  ## ADHOC: In case it is set by user. /HB 2018-09-13

echo "Software:"
echo "- PINDEL=${PINDEL:?}"
echo "- PINDEL2VCF=${PINDEL2VCF:?}"
[[ -x "$PINDEL" ]] || { echo "File not found or not an executable: ${PINDEL}"; exit 1; }
[[ -x "$PINDEL2VCF" ]] || { echo "File not found or not an executable: ${PINDEL2VCF}"; exit 1; }
[[ -x "$SCRIPT_A" ]] || { echo "File not found or not an executable: ${SCRIPT_A}"; exit 1; }
[[ -x "$SCRIPT_B" ]] || { echo "File not found or not an executable: ${SCRIPT_B}"; exit 1; }
[[ -x "$SCRIPT_C" ]] || { echo "File not found or not an executable: ${SCRIPT_C}"; exit 1; }
[[ -x "$PYTHON_SCRIPT_A" ]] || { echo "File not found or not an executable: ${PYTHON_SCRIPT_A}"; exit 1; }

REF=${LG3_HOME}/resources/UCSC_HG19_Feb_2009/hg19.fa
TARGET=${LG3_HOME}/resources/All_exome_targets.extended_200bp.bed
echo "References:"
echo "- REF=${REF:?}"
echo "- TARGET=${TARGET:?}"
[[ -f "$REF" ]]    || { echo "File not found: ${REF}"; exit 1; }
[[ -f "$TARGET" ]] || { echo "File not found: ${TARGET}"; exit 1; }

SCRATCH=${SCRATCH_ROOT}/${SAMPLE}_pindel
mkdir -p "${SCRATCH}" || { echo "Can't create destination directory ${SCRATCH}"; exit 1; }

WDIR=${LG3_OUTPUT_ROOT}/${PROJECT}/pindel
mkdir -p "${WDIR}" || { echo "Can't create destination directory ${WDIR}"; exit 1; }

## setup pindel cfg file
date
echo -e "\\n========= [Setup] Make pindel cfg file in $WDIR"
cd "${WDIR}" || { echo "ERROR: Failed to set working directory to ${WDIR}"; exit 1; }

"${SCRIPT_A}" "${SAMPLE}" "${PROJECT}" "${CONV}"  || { echo "ABORT: error on line $LINENO" ; exit 1 ; }

## set up scratch directory
cd "${SCRATCH}" || { echo "ERROR: Failed to set working directory to ${SCRATCH}"; exit 1; }

## run pindel
echo -e "\\n========= [Pindel] Run pindel"
$PINDEL -f "$REF" -i "${WDIR}/${SAMPLE}.pindel.cfg" -c ALL -o "${SAMPLE}.pindel" -r FALSE -t FALSE -l FALSE -k FALSE -T "${ncores}"  || { echo "ABORT: error on line $LINENO" ; exit 1 ; }

## move from scratch to project folder
cd "$WDIR" || { echo "ERROR: Failed to set working directory to ${WDIR}"; exit 1; }
cp -r "$SCRATCH" ./
rm -rf "$SCRATCH"

## convert to vcf
echo -e "\\n========= [Pindel] Convert pindel to vcf"
$PINDEL2VCF -P "${SAMPLE}_pindel/${SAMPLE}.pindel" -r "$REF" -R hg19 -d 20121031 -v "${SAMPLE}_pindel/${SAMPLE}.pindel.vcf" -G  || { echo "ABORT: error on line $LINENO" ; exit 1 ; }

## convert to tdt
echo -e "\\n========= [Pindel] Convert vcf to tdt"
"${PYTHON_SCRIPT_A}" "${SAMPLE}_pindel/${SAMPLE}.pindel.vcf"  || { echo "ABORT: error on line $LINENO" ; exit 1 ; }

## rename file
cd "${SAMPLE}_pindel" || { echo "ERROR: Failed to set working directory to ${SAMPLE}_pindel"; exit 1; }
mv "${SAMPLE}.pindel.vcf.tdt" "${SAMPLE}.indels"

## filter pindel data
echo -e "\\n========= [Filter] Filter pindel output using target $TARGET"
"${SCRIPT_B}" "${SAMPLE}.indels" "${PROJECT}" "$TARGET"  || { echo "ABORT: error on line $LINENO" ; exit 1 ; }

## annotate (annovar, kinase, cosmic, etc) and filter
echo -e "\\n========= [Annotate] Annotate indels and apply annotation-based filters"
"${SCRIPT_C}" "${SAMPLE}.indels" "${PROJECT}"  || { echo "ABORT: error on line $LINENO" ; exit 1 ; }

echo -ne "\\nEnd of script on "
date

echo "[$(date +'%Y-%m-%d %H:%M:%S %Z')] END: $PROGRAM"
