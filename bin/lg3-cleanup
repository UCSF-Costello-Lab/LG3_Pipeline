#! /usr/bin/env bash
### Selectively Delete LG3 Pipeline Output"
###
### Usage:
###  lg3 cleanup [options] (--hot [hot-options])
###
### Options:
###  --project=<PROJECT>  Name of project (default: LG3)
###  --patient=<PATIENT>  Name of patient (default: Patient157t)
###  --samples="<SAMPLES" Space-separated set of samples (default: "Z00599t Z00600t Z00601t")
###  --hot                Delete the files (otherwise only list)
###
### "Hot" options (following --hot):
###  --trim    Remove trimmed FASTQ files
###  --align   Remove aligned BAM files
###  --recal   Remove recalibrated BAM files
###  --recal2  Remove recalibrated Pass 2 BAM files 
###  --mut     Remove MutDet files
###  --pindel  Remove Pindel files
###  --comb    Remove comb(?_ output
###  --maf     Remove MAF files
###  --all     Remove everything"
###
### Examples:
###  lg3 cleanup --patient Patient157t
###  lg3 cleanup --patient Patient157t --hot --trim
###
PROGRAM=${BASH_SOURCE[0]}
PROG=$(basename "$PROGRAM")
HOT=false

TRIM=false
ALIGN=false
RECAL=false
RECAL2=false
MUT=false
PINDEL=false
COMB=false
MAF=false
ALL=false

PROJECT=${PROJECT:-LG3}
PATIENT=${PATIENT:-Patient157t}
SAMPLES="Z00599t Z00600t Z00601t"

help() {
	echo "Selectively delete LG3 pipeline output"
	echo "Usage: ${PROG} --project=$PROJECT --patient=$PATIENT --samples=\"$SAMPLES\" --hot [options]" 
	echo -e "\\twhere options indicate what data to delete"
	echo -e "\\t\\t--trim"
	echo -e "\\t\\t--align"
	echo -e "\\t\\t--recal"
	echo -e "\\t\\t--recal2"
	echo -e "\\t\\t--mut"
	echo -e "\\t\\t--pindel"
	echo -e "\\t\\t--comb"
	echo -e "\\t\\t--maf"
	echo -e "\\t\\t--all\\tRemove all"
	exit 1
}

if [ $# -eq 0 ]; then
	help
fi

while [ -n "$1" ]; do
case $1 in
	 --project=*) PROJECT=${1#*=};shift 1;;
	 --patient=*) PATIENT=${1#*=};shift 1;;
	 --samples=*) SAMPLES="${1#*=}";shift 1;;
    --hot) HOT=true;shift 1;;
    --trim) TRIM=true;shift 1;;
    --align) ALIGN=true;shift 1;;
    --recal) RECAL=true;shift 1;;
    --recal2) RECAL2=true;shift 1;;
    --mut) MUT=true;shift 1;;
    --pindel) PINDEL=true;shift 1;;
    --comb) COMB=true;shift 1;;
    --maf) MAF=true;shift 1;;
    --all) ALL=true;shift 1;;
    -*) echo "error: no such option $1";exit 1;;
    *)  break;;
esac
done
if $ALL ; then
	TRIM=true
	ALIGN=true
	RECAL=true
	#RECAL2=true
	MUT=true
	PINDEL=true
	COMB=true
	MAF=true	
fi

echo "Project = ${PROJECT}"
echo "Patient = ${PATIENT}"
echo "Samples = ${SAMPLES}"

LG3_OUTPUT_ROOT=${LG3_OUTPUT_ROOT:-/costellolab/data1/jocostello}
RAWDATA=/costellolab/data1/ismirnov/tmp
ALIGNDATA=${LG3_OUTPUT_ROOT}/${PROJECT}/exomes
RECALDATA=${LG3_OUTPUT_ROOT}/${PROJECT}/exomes_recal
MUTDATA=${LG3_OUTPUT_ROOT}/${PROJECT}/mutations
PINDELDATA=${LG3_OUTPUT_ROOT}/${PROJECT}/pindel
COMBDATA=${LG3_OUTPUT_ROOT}/${PROJECT}/MutInDel
MAFDATA=${LG3_OUTPUT_ROOT}/${PROJECT}/MAF

if ! ${HOT} ; then
	echo "WARNING: Dry run! Use --hot to actually delete data"	
fi

if ${TRIM} ; then
	echo "========== Removing trimmed data ..."
	for SAMPLE in ${SAMPLES}
	do
		echo -e "\\t${SAMPLE}"
		D="${RAWDATA}/${SAMPLE}-trim"
		du -h "${D}" || { echo "STOP"; exit 1; }
		echo -e "\\trm -rf ${D}"
		${HOT} && rm -rf "${D}" 
	done	
fi

if ${ALIGN} ; then
   echo "========== Removing aligned data ..."
   for SAMPLE in ${SAMPLES}
   do
      echo -e "\\t${SAMPLE}"
		D="${ALIGNDATA}/${SAMPLE}"
		du -h "${D}" || { echo "STOP"; exit 1; }
      echo -e "\\trm -rf ${D}"
		${HOT} && rm -rf "${D}" 
   done
fi

if ${RECAL} ; then
   echo "========== Removing recal data for ${PATIENT} ..."
	D="${RECALDATA}/${PATIENT}"
	du -h "${D}" || { echo "STOP"; exit 1; }
   echo -e "\\trm -rf ${D}"
	${HOT} && rm -rf "${D}"
fi

if ${RECAL2} ; then
   echo "========== Removing recal before.merge data for ${PATIENT} ..."
	D="${RECALDATA}/${PATIENT}.before.merge"
	du -h "${D}" || { echo "STOP"; exit 1; }
   echo -e "\\trm -rf ${D}"
	${HOT} && rm -rf "${D}"
fi

if ${MUT} ; then
   echo "========== Removing mutect data for ${PATIENT} ..."
	D="${MUTDATA}/${PATIENT}_mutect"
	du -h "${D}" || { echo "STOP"; exit 1; }
   echo -e "\\trm -rf ${D}"
	${HOT} && rm -rf "${D}"
fi

if ${PINDEL} ; then
   echo "========== Removing pindel data for ${PATIENT} ..."
	D="${PINDELDATA}/${PATIENT}_pindel"
	du -h "${D}" || { echo "STOP"; exit 1; }
   echo -e "\\trm -rf ${D}"
	${HOT} && rm -rf "${D}"
   echo -e "\\trm -f ${PINDELDATA}/${PATIENT}.pindel.cfg"
   ${HOT} && rm -rf "${D}"
fi

if ${COMB} ; then
   echo "========== Removing combined data for ${PATIENT} ..."
   echo -e "\\trm -f ${COMBDATA}/${PATIENT}.[sR]*"
	du -hc "${COMBDATA}/${PATIENT}."[sR]*
   ${HOT} && rm -rf "${D}"
fi

if ${MAF} ; then
   echo "========== Removing MAF data for ${PATIENT} ..."

	D="${MAFDATA}/${PATIENT}_MAF"
	du -h "${D}" || { echo "STOP"; exit 1; }
   echo -e "\\trm -rf ${D}"
	${HOT} && rm -rf "${D}"

	D="${MAFDATA}/${PATIENT}_plots"
	du -h "${D}" || { echo "STOP"; exit 1; }
   echo -e "\\trm -rf ${D}"
	${HOT} && rm -rf "${D}"
fi

echo "Finished!"
