#!/bin/bash

### Usage: qsub -v SAMPLE=PatientXX,PROJECT=LG3orGBM,CONV=patient_ID_conversions.tsv /path/to/pindel_all.pbs
#PBS -N ${SAMPLE}.pindel
#PBS -e ${SAMPLE}.pindel.err
#PBS -o ${SAMPLE}.pindel.out
#PBS -l nodes=1:ppn=6,vmem=12gb
#PBS -m ae

### Configuration
LG3_HOME=${LG3_HOME:-/home/jocostello/shared/LG3_Pipeline}
LG3_OUTPUT_ROOT=${LG3_OUTPUT_ROOT:-/costellolab/data1/jocostello}
EMAIL=${EMAIL:?}
PROJECT=${PROJECT:-LG3}
SCRATCH_ROOT=${SCRATCH_ROOT:-/scratch/${USER:?}/${PBS_JOBID}}
LG3_DEBUG=${LG3_DEBUG:-true}

### Debug
if [[ $LG3_DEBUG ]]; then
  echo "LG3_HOME=$LG3_HOME"
  echo "LG3_OUTPUT_ROOT=$LG3_OUTPUT_ROOT"
  echo "EMAIL=${EMAIL}"
  echo "SCRATCH_ROOT=$SCRATCH_ROOT"
  echo "PWD=$PWD"
  echo "USER=$USER"
fi



echo "PINDEL"
echo "Patient: ${SAMPLE:?}"
echo "Project: ${PROJECT:?}"
echo "Conversion File: ${CONV:?}"
echo "----------------------------------"

WDIR=${LG3_OUTPUT_ROOT}/${PROJECT}/pindel
BIN=${LG3_HOME}/scripts

PINDEL=${LG3_HOME}/tools/pindel024t/pindel
PINDEL2VCF=${LG3_HOME}/tools/pindel024t/pindel2vcf

REF=${LG3_HOME}/resources/UCSC_HG19_Feb_2009/hg19.fa
TARGET=${LG3_HOME}/resources/WG_hg19-ENCFF001TDO.bed

## setup pindel cfg file
date
echo -e "\\n========= [Setup] Make pindel cfg file in $WDIR"
cd "$WDIR" || { echo "ERROR: Failed to set working directory to ${WDIR}"; exit 1; }
"$BIN/pindel_wgs_setup.sh" "${SAMPLE}" "${PROJECT}" "${CONV}"  || { echo "ABORT: error on line $LINENO" ; exit 1 ; }

## set up scratch directory
SCRATCH=${SCRATCH_ROOT}/${SAMPLE}_pindel_wgs
mkdir -p "$SCRATCH"
cd "$SCRATCH" || { echo "ERROR: Failed to set working directory to ${SCRATCH}"; exit 1; }

## run pindel
echo -e "\\n========= [Pindel] Run pindel"
$PINDEL -f "$REF" -i "${WDIR}/${SAMPLE}.pindel_wgs.cfg" -c ALL -o "${SAMPLE}.pindel" -r FALSE -t FALSE -l FALSE -k FALSE -T 6  || { echo "ABORT: error on line $LINENO" ; exit 1 ; }

## move from scratch to project folder
cd "$WDIR" || { echo "ERROR: Failed to set working directory to ${WDIR}"; exit 1; }
cp -r "$SCRATCH" ./
rm -rf "$SCRATCH"

## convert to vcf
echo -e "\\n========= [Pindel] Convert pindel to vcf"
$PINDEL2VCF -P "${SAMPLE}_pindel_wgs/${SAMPLE}.pindel" -r "$REF" -R hg19 -d 20121031 -v "${SAMPLE}_pindel_wgs/${SAMPLE}.pindel.vcf" -G  || { echo "ABORT: error on line $LINENO" ; exit 1 ; }

## convert to tdt
echo -e "\\n========= [Pindel] Convert vcf to tdt"
"$BIN/vcf2tdt.py" "${SAMPLE}_pindel_wgs/${SAMPLE}.pindel.vcf"  || { echo "ABORT: error on line $LINENO" ; exit 1 ; }

## rename file
cd "${SAMPLE}_pindel_wgs" || { echo "ERROR: Failed to set working directory to ${SAMPLE}_pindel_wgs"; exit 1; }
mv "${SAMPLE}.pindel.vcf.tdt" "${SAMPLE}.indels"

## filter pindel data
echo -e "\\n========= [Filter] Filter pindel output using target $TARGET"
"$BIN/pindel_filter.sh" "${SAMPLE}.indels" "${PROJECT}" "$TARGET"  || { echo "ABORT: error on line $LINENO" ; exit 1 ; }

## annotate (annovar, kinase, cosmic, etc) and filter
echo -e "\\n========= [Annotate] Annotate indels and apply annotation-based filters"
"$BIN/pindel_annotate.sh" "${SAMPLE}.indels" "${PROJECT}"  || { echo "ABORT: error on line $LINENO" ; exit 1 ; }

echo -ne "\\nEnd of script $0 on "
date
