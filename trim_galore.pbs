#!/bin/bash
#PBS -e _Trim_${SAMPLE}.err
#PBS -o _Trim_${SAMPLE}.out
#PBS -l nodes=1:ppn=1,vmem=4gb
#PBS -m ae

PROGRAM=${BASH_SOURCE[0]}
echo "[$(date +'%Y-%m-%d %H:%M:%S %Z')] BEGIN: $PROGRAM"
echo "Call: ${BASH_SOURCE[*]}"
echo "Script: $PROGRAM"
echo "Arguments: $*"

### Configuration
LG3_HOME=${LG3_HOME:?}
LG3_OUTPUT_ROOT=${LG3_OUTPUT_ROOT:-output}
LG3_SCRATCH_ROOT=${LG3_SCRATCH_ROOT:-/scratch/${USER:?}/${PBS_JOBID}}
LG3_DEBUG=${LG3_DEBUG:-true}

### Input
echo "Input:"
echo "- FASTQ1=${FASTQ1:?}"
echo "- FASTQ2=${FASTQ2:?}"
echo "- PROJECT=${PROJECT:?}"
echo "- SAMPLE=${SAMPLE:?}"
echo "- QTY=${QTY:?}"
echo "- TG=${TG}"
echo "- JUNK=$JUNK"

## Assert existance of input files
[[ -f "$FASTQ1" ]] || { echo "File not found: ${FASTQ1}"; exit 1; }
[[ -f "$FASTQ2" ]] || { echo "File not found: ${FASTQ2}"; exit 1; }

### Debug
if [[ $LG3_DEBUG ]]; then
  echo "Settings:"
  echo "- LG3_HOME=$LG3_HOME"
  echo "- LG3_OUTPUT_ROOT=$LG3_OUTPUT_ROOT"
  echo "- EMAIL=${EMAIL}"
  echo "- LG3_SCRATCH_ROOT=$LG3_SCRATCH_ROOT"
  echo "- PWD=$PWD"
  echo "- USER=$USER"
  echo "- PBS_NUM_PPN=$PBS_NUM_PPN"
  echo "- hostname=$(hostname)"
fi

## Requires absolute paths
FASTQ1=$(readlink -e "${FASTQ1:?}")
FASTQ2=$(readlink -e "${FASTQ2:?}")
echo "FASTQ1=${FASTQ1:?} (expanded)"
echo "FASTQ2=${FASTQ2:?} (expanded)"

OPWD=${PWD:?}
PROG=trim_galore
NODES=$(tr '\n' ' ' < "$PBS_NODEFILE")
DATE=$(date '+%Y-%m-%d %H:%M:%S')
echo "Started $PROG on $DATE"
echo "Using node(s): $NODES"

## Assert existance of software
SCRIPT=${LG3_HOME}/scripts/trim_galore.sh
[[ -x "$SCRIPT" ]] || { echo "File not found or not an executable: ${SCRIPT}"; exit 1; }

mkdir -p "${LG3_OUTPUT_ROOT}" || { echo "Can't create destination directory ${LG3_OUTPUT_ROOT}"; exit 1; }
mkdir -p "${LG3_OUTPUT_ROOT}/${PROJECT}" || { echo "Can't create destination directory ${LG3_OUTPUT_ROOT}/${PROJECT}"; exit 1; }
mkdir -p "${LG3_OUTPUT_ROOT}/${PROJECT}/trim" || { echo "Can't create destination directory ${LG3_OUTPUT_ROOT}/${PROJECT}/trim"; exit 1; }

WDIR=${LG3_SCRATCH_ROOT}/${SAMPLE}-trim
echo "WDIR=${WDIR}"
mkdir -p "${WDIR}" || { echo "Can't create scratch directory ${WDIR}"; exit 1; }
cd "${WDIR}" || { echo "ERROR: Failed to set working directory to ${WDIR}"; exit 1; }
echo "Current working directory: ${PWD}"

cp "$FASTQ1" .
cp "$FASTQ2" .

"${SCRIPT}" -quality="$QTY" "$FASTQ1" "$FASTQ2" || { echo "ERROR: trim_galore FAILED"; exit 1; }

FQ1=$(basename "$FASTQ1")
FQ2=$(basename "$FASTQ2")
rm "$FQ1" "$FQ2"

echo "Intermediate output files:"
ls -laR

echo "Moving files of interest to final destination:"
if [ "$QTY" -eq 20 ]; then
    SAMPLE_PREFIX=${SAMPLE}-trim
else
    SAMPLE_PREFIX=${SAMPLE}-trim${QTY}
fi
echo "- SAMPLE_PREFIX=${SAMPLE_PREFIX}"

mv "${SAMPLE}_R1"*_val_1.fq.gz "${SAMPLE_PREFIX}_R1.fastq.gz" || { echo "ERROR: Failed to copy ${SAMPLE_PREFIX}_R1.fastq.gz"; exit 1; }
mv "${SAMPLE}_R2"*_val_2.fq.gz "${SAMPLE_PREFIX}_R2.fastq.gz" || { echo "ERROR: Failed to copy ${SAMPLE_PREFIX}_R2.fastq.gz"; exit 1; }
mv "${SAMPLE}_R1"*.fastq.gz_trimming_report.txt "${SAMPLE_PREFIX}_R1.trimming_report.txt" || { echo "ERROR: Failed to copy ${SAMPLE_PREFIX}_R2.trimming_report.txt"; exit 1; }
mv "${SAMPLE}_R2"*.fastq.gz_trimming_report.txt "${SAMPLE_PREFIX}_R2.trimming_report.txt" || { echo "ERROR: Failed to copy ${SAMPLE_PREFIX}_R2.trimming_report.txt"; exit 1; }

cd "${OPWD}" || { echo "ERROR: Failed to set working directory to .."; exit 1; }
echo "Current working directory: ${PWD}"

cp -r -p "${WDIR}" "${LG3_OUTPUT_ROOT}/${PROJECT}/trim"

echo "Removing directory (recursively): ${WDIR}"
rm -rf "${WDIR}"

echo "Output: ${LG3_OUTPUT_ROOT}/${PROJECT}/trim/${SAMPLE}-trim"
ls -s "${LG3_OUTPUT_ROOT}/${PROJECT}/trim/${SAMPLE}-trim"

echo "End of PBS script!"
date

echo "[$(date +'%Y-%m-%d %H:%M:%S %Z')] END: $PROGRAM"
